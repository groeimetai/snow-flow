# Snow-Flow Website v4.2.0 ENTERPRISE - Cloud Run Deployment
# Builds and deploys the enterprise website with updated hero fixes

steps:
  # Build the Docker image from website directory
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/snow-flow-website:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/snow-flow-website:latest',
      '-f', 'website/Dockerfile',  # Specify Dockerfile location
      'website/'  # Build context is website directory
    ]
    id: 'build-website'

  # Push the Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/snow-flow-website:$COMMIT_SHA']
    id: 'push-latest'
    waitFor: ['build-website']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/snow-flow-website:latest']
    id: 'push-sha'
    waitFor: ['build-website']

  # Deploy to Cloud Run with enterprise configuration
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', 'snow-flow-website',
      '--image', 'gcr.io/$PROJECT_ID/snow-flow-website:$COMMIT_SHA',
      '--region', 'europe-west1',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--port', '80',
      '--memory', '1Gi',  # Increased for enterprise website
      '--cpu', '2',       # Increased for better performance
      '--concurrency', '100',
      '--max-instances', '20',  # Increased for enterprise scale
      '--min-instances', '1',
      '--set-env-vars', 'NODE_ENV=production,ENTERPRISE_MODE=true',
      '--timeout', '300',
      '--service-account', 'cloud-run-sa@$PROJECT_ID.iam.gserviceaccount.com'
    ]
    id: 'deploy-cloud-run'
    waitFor: ['push-latest', 'push-sha']

  # Verify deployment
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        echo "üåê Snow-Flow Enterprise Website Deployed!"
        
        # Get service URL
        SERVICE_URL=$(gcloud run services describe snow-flow-website \
          --region=europe-west1 \
          --format='value(status.url)')
        
        echo "üîó Website URL: $SERVICE_URL"
        echo "‚úÖ Features: 23 MCP Servers, 355+ Tools"
        echo "‚úÖ Enterprise: ITAM, SecOps, Notifications"
        echo "‚úÖ Hero fixes: Contrast, centering, counter animations"
        
        # Test website is responding
        curl -f "$SERVICE_URL" -o /dev/null || echo "‚ö†Ô∏è Website not responding yet (may take a moment)"
    id: 'verify-deployment'
    waitFor: ['deploy-cloud-run']

# Build options optimized for website deployment
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_STANDARD_4'  # Standard for Docker builds
  diskSizeGb: 50

# Substitutions
substitutions:
  _REGION: 'europe-west1'
  _SERVICE_NAME: 'snow-flow-website'

# Images to be pushed
images:
  - 'gcr.io/$PROJECT_ID/snow-flow-website:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/snow-flow-website:latest'

# Build timeout
timeout: '1200s'

# Tags
tags: ['snow-flow', 'website', 'cloud-run', 'v4-2-0', 'enterprise']