{
  "type": "flow",
  "name": "Integration Flow Template",
  "description": "Template for creating flows that integrate with external systems via REST/SOAP",
  "category": "patterns/integration",
  "config": {
    "name": "{{FLOW_NAME|integration_flow}}",
    "description": "{{FLOW_DESCRIPTION|External system integration flow}}",
    "table": "{{TABLE_NAME|incident}}",
    "active": true,
    "trigger": {
      "type": "{{TRIGGER_TYPE|record_updated}}",
      "table": "{{TABLE_NAME|incident}}",
      "condition": "{{TRIGGER_CONDITION|state.changes() && state == 'resolved'}}"
    },
    "variables": [
      {
        "name": "source_record",
        "type": "reference",
        "reference": "{{TABLE_NAME|incident}}",
        "description": "The record that triggered the integration"
      },
      {
        "name": "external_id",
        "type": "string",
        "value": "",
        "description": "ID from external system"
      },
      {
        "name": "sync_status",
        "type": "string",
        "value": "pending",
        "description": "Status of synchronization"
      },
      {
        "name": "response_data",
        "type": "object",
        "value": "{}",
        "description": "Response from external system"
      },
      {
        "name": "retry_count",
        "type": "integer",
        "value": "0",
        "description": "Number of retry attempts"
      }
    ],
    "activities": [
      {
        "id": "start",
        "type": "start",
        "name": "Integration Start",
        "outputs": {
          "next": "check_integration_enabled"
        }
      },
      {
        "id": "check_integration_enabled",
        "type": "condition",
        "name": "Check Integration Enabled",
        "description": "Verify if integration is enabled for this record type",
        "condition": "gs.getProperty('{{INTEGRATION_PROPERTY|external.integration.enabled}}') == 'true'",
        "outputs": {
          "true": "transform_data",
          "false": "end_disabled"
        }
      },
      {
        "id": "transform_data",
        "type": "script",
        "name": "Transform Data",
        "description": "Transform ServiceNow data to external system format",
        "script": "{{TRANSFORM_SCRIPT|transformDataForExternalSystem}}",
        "config": {
          "script_include": "{{TRANSFORM_SCRIPT_INCLUDE|IntegrationTransformUtil}}",
          "method": "{{TRANSFORM_METHOD|transformRecord}}",
          "parameters": {
            "record": "${source_record}",
            "mapping": "{{DATA_MAPPING|default_mapping}}"
          }
        },
        "outputs": {
          "next": "call_external_api"
        }
      },
      {
        "id": "call_external_api",
        "type": "rest",
        "name": "Call External API",
        "description": "Send data to external system",
        "config": {
          "method": "{{API_METHOD|POST}}",
          "endpoint": "{{API_ENDPOINT|https://api.external.com/v1/records}}",
          "headers": {
            "Content-Type": "application/json",
            "Authorization": "Bearer ${gs.getProperty('{{API_KEY_PROPERTY|external.api.key}}')}"
          },
          "body": "${transform_data.result}",
          "timeout": "{{API_TIMEOUT|30000}}",
          "retry": {
            "max_attempts": "{{MAX_RETRIES|3}}",
            "backoff": "exponential",
            "initial_delay": "1000"
          }
        },
        "outputs": {
          "success": "process_response",
          "error": "handle_api_error"
        }
      },
      {
        "id": "process_response",
        "type": "script",
        "name": "Process Response",
        "description": "Process the response from external system",
        "script": "{{PROCESS_SCRIPT|processExternalResponse}}",
        "config": {
          "script_include": "{{PROCESS_SCRIPT_INCLUDE|IntegrationResponseProcessor}}",
          "method": "{{PROCESS_METHOD|processResponse}}",
          "parameters": {
            "response": "${call_external_api.response}",
            "record": "${source_record}"
          }
        },
        "outputs": {
          "next": "update_sync_status"
        }
      },
      {
        "id": "handle_api_error",
        "type": "script",
        "name": "Handle API Error",
        "description": "Handle errors from external API",
        "script": "{{ERROR_HANDLER_SCRIPT|handleIntegrationError}}",
        "config": {
          "script_include": "{{ERROR_SCRIPT_INCLUDE|IntegrationErrorHandler}}",
          "method": "{{ERROR_METHOD|handleError}}",
          "parameters": {
            "error": "${call_external_api.error}",
            "record": "${source_record}",
            "retry_count": "${retry_count}"
          }
        },
        "outputs": {
          "retry": "increment_retry",
          "fail": "create_error_record"
        }
      },
      {
        "id": "increment_retry",
        "type": "script",
        "name": "Increment Retry Count",
        "description": "Increment retry counter",
        "script": "vars.retry_count = parseInt(vars.retry_count) + 1;",
        "outputs": {
          "next": "check_retry_limit"
        }
      },
      {
        "id": "check_retry_limit",
        "type": "condition",
        "name": "Check Retry Limit",
        "description": "Check if retry limit exceeded",
        "condition": "vars.retry_count <= {{MAX_RETRIES|3}}",
        "outputs": {
          "true": "wait_before_retry",
          "false": "create_error_record"
        }
      },
      {
        "id": "wait_before_retry",
        "type": "wait",
        "name": "Wait Before Retry",
        "description": "Wait before retrying the API call",
        "config": {
          "duration": "{{RETRY_WAIT|30}}",
          "unit": "seconds"
        },
        "outputs": {
          "next": "call_external_api"
        }
      },
      {
        "id": "update_sync_status",
        "type": "update_record",
        "name": "Update Sync Status",
        "description": "Update record with sync status",
        "config": {
          "record": "${source_record}",
          "values": {
            "{{SYNC_STATUS_FIELD|u_external_sync_status}}": "synced",
            "{{EXTERNAL_ID_FIELD|u_external_id}}": "${process_response.external_id}",
            "{{SYNC_DATE_FIELD|u_last_sync_date}}": "${gs.nowDateTime()}",
            "{{SYNC_RESPONSE_FIELD|u_sync_response}}": "${JSON.stringify(response_data)}"
          }
        },
        "outputs": {
          "next": "send_success_notification"
        }
      },
      {
        "id": "create_error_record",
        "type": "create_record",
        "name": "Create Error Record",
        "description": "Create integration error record",
        "config": {
          "table": "{{ERROR_TABLE|u_integration_errors}}",
          "values": {
            "source_table": "{{TABLE_NAME|incident}}",
            "source_record": "${source_record.sys_id}",
            "error_message": "${handle_api_error.error_message}",
            "error_details": "${JSON.stringify(call_external_api.error)}",
            "retry_count": "${retry_count}",
            "flow_context": "${gs.getFlowContext()}"
          }
        },
        "outputs": {
          "next": "send_error_notification"
        }
      },
      {
        "id": "send_success_notification",
        "type": "notification",
        "name": "Send Success Notification",
        "description": "Notify of successful integration",
        "config": {
          "recipients": "{{SUCCESS_RECIPIENTS|integration_team}}",
          "template": "{{SUCCESS_TEMPLATE|integration_success}}",
          "message": "Record ${source_record.number} successfully synced to external system"
        },
        "outputs": {
          "next": "log_activity"
        }
      },
      {
        "id": "send_error_notification",
        "type": "notification",
        "name": "Send Error Notification",
        "description": "Notify of integration failure",
        "config": {
          "recipients": "{{ERROR_RECIPIENTS|integration_team}}",
          "template": "{{ERROR_TEMPLATE|integration_error}}",
          "message": "Failed to sync record ${source_record.number} after ${retry_count} attempts",
          "priority": "high"
        },
        "outputs": {
          "next": "log_activity"
        }
      },
      {
        "id": "log_activity",
        "type": "log",
        "name": "Log Activity",
        "description": "Log integration activity",
        "config": {
          "level": "info",
          "source": "Integration Flow",
          "message": "Integration completed for ${source_record.number} with status: ${sync_status}"
        },
        "outputs": {
          "next": "end"
        }
      },
      {
        "id": "end",
        "type": "end",
        "name": "Integration Complete"
      },
      {
        "id": "end_disabled",
        "type": "end",
        "name": "Integration Disabled"
      }
    ],
    "connections": [
      {"from": "start", "to": "check_integration_enabled"},
      {"from": "check_integration_enabled", "to": "transform_data", "condition": "true"},
      {"from": "check_integration_enabled", "to": "end_disabled", "condition": "false"},
      {"from": "transform_data", "to": "call_external_api"},
      {"from": "call_external_api", "to": "process_response", "condition": "success"},
      {"from": "call_external_api", "to": "handle_api_error", "condition": "error"},
      {"from": "process_response", "to": "update_sync_status"},
      {"from": "handle_api_error", "to": "increment_retry", "condition": "retry"},
      {"from": "handle_api_error", "to": "create_error_record", "condition": "fail"},
      {"from": "increment_retry", "to": "check_retry_limit"},
      {"from": "check_retry_limit", "to": "wait_before_retry", "condition": "true"},
      {"from": "check_retry_limit", "to": "create_error_record", "condition": "false"},
      {"from": "wait_before_retry", "to": "call_external_api"},
      {"from": "update_sync_status", "to": "send_success_notification"},
      {"from": "create_error_record", "to": "send_error_notification"},
      {"from": "send_success_notification", "to": "log_activity"},
      {"from": "send_error_notification", "to": "log_activity"},
      {"from": "log_activity", "to": "end"}
    ],
    "error_handling": {
      "on_error": "create_error_record",
      "retry_count": 3,
      "retry_delay": 300,
      "notification_group": "{{ERROR_NOTIFICATION_GROUP|integration_administrators}}"
    }
  },
  "variables": {
    "FLOW_NAME": "integration_flow",
    "FLOW_DESCRIPTION": "External system integration flow",
    "TABLE_NAME": "incident",
    "TRIGGER_TYPE": "record_updated",
    "TRIGGER_CONDITION": "state.changes() && state == 'resolved'",
    "INTEGRATION_PROPERTY": "external.integration.enabled",
    "TRANSFORM_SCRIPT": "transformDataForExternalSystem",
    "TRANSFORM_SCRIPT_INCLUDE": "IntegrationTransformUtil",
    "TRANSFORM_METHOD": "transformRecord",
    "DATA_MAPPING": "default_mapping",
    "API_METHOD": "POST",
    "API_ENDPOINT": "https://api.external.com/v1/records",
    "API_KEY_PROPERTY": "external.api.key",
    "API_TIMEOUT": "30000",
    "MAX_RETRIES": "3",
    "PROCESS_SCRIPT": "processExternalResponse",
    "PROCESS_SCRIPT_INCLUDE": "IntegrationResponseProcessor",
    "PROCESS_METHOD": "processResponse",
    "ERROR_HANDLER_SCRIPT": "handleIntegrationError",
    "ERROR_SCRIPT_INCLUDE": "IntegrationErrorHandler",
    "ERROR_METHOD": "handleError",
    "RETRY_WAIT": "30",
    "SYNC_STATUS_FIELD": "u_external_sync_status",
    "EXTERNAL_ID_FIELD": "u_external_id",
    "SYNC_DATE_FIELD": "u_last_sync_date",
    "SYNC_RESPONSE_FIELD": "u_sync_response",
    "ERROR_TABLE": "u_integration_errors",
    "SUCCESS_RECIPIENTS": "integration_team",
    "SUCCESS_TEMPLATE": "integration_success",
    "ERROR_RECIPIENTS": "integration_team",
    "ERROR_TEMPLATE": "integration_error",
    "ERROR_NOTIFICATION_GROUP": "integration_administrators"
  }
}